
@{
    ViewBag.Title = "Index";
}

<div id="app" class="container-fluid mt-4">
    <h1 class="h1">User Manager</h1>
    <div class="alert alert-info" role="alert" v-show="loading">Loading...</div>
    <div class="row">

        <div class="col-lg-3">
            <div class="card">
                <h5 class="card-title">{{(model.UserId ? 'Edit User ID#' + model.UserId : 'New User')}}</h5>
                <form v-on:submit.prevent="saveUser">
                    <div class="form-group">
                        <label for="firstNameInput">First Name</label>
                        <input type="text" class="form-control" id="firstNameInput" v-model="model.FirstName" />
                    </div>
                    <div class="form-group">
                        <label for="lastNameInput">Last Name</label>
                        <input type="text" class="form-control" id="lastNameInput" v-model="model.LastName" />
                    </div>
                    <div>
                        <button type="submit" class="btn btn-primary">Save User</button>
                    </div>
                </form>
            </div>
        </div>
        <div class="col">
            <hr />
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>&nbsp;</th>
                    </tr>
                </thead>
                <tbody>
                    <tr v-for="user in users" :key="user.UserId">
                        <td>{{ user.UserId }}</td>
                        <td>{{ user.FirstName }}</td>
                        <td>{{ user.LastName }}</td>
                        <td class="text-right">
                            <a href="#" v-on:click.prevent="populateUserToEdit(user)">Edit</a> -
                            <a href="#" v-on:click.prevent="deleteUser(user.UserId)">Delete</a>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>
@section scripts
{
    <script>
        var app = new Vue({
            el: '#app',
            data: {
                loading: false,
                users: [],
                model: {}
            },
            mounted: function () {
                this.refreshUsers();
            },
            methods: {
                populateUserToEdit: function (user) {
                    this.model = Object.assign({}, user);
                },
                deleteUser: function (userId) {
                    if (confirm('Are you sure you want to delete this user?')) {
                        if (this.model.UserId === userId) {
                            this.model = {};
                        }
                        this.deleteUserApi(userId);
                        //this.refreshUsers();
                    }
                },
                deleteUserApi: function (userId) {
                    var self = this;
                    $.ajax({
                        url: '/api/User/' + userId,
                        method: 'DELETE',
                        success: function (data) {
                            self.refreshUsers();
                        },
                        error: function (error) {
                            console.log(error);
                        }
                    });
                },
                updateUserApi: function (id, user) {
                    var self = this;
                    $.ajax({
                        url: '/api/User/' + id,
                        method: 'PUT',
                        dataType: 'json',
                        data: user,
                        success: function (data) {
                            self.refreshUsers();
                        },
                        error: function (error) {
                            console.log(error);
                        }
                    });
                },
                createUserApi: function (user) {
                    //// POST: api/UserApi
                    var self = this;
                    $.ajax({
                        url: '/api/User',
                        method: 'POST',
                        dataType: 'json',
                        data: user,
                        success: function (data) {
                            self.refreshUsers();
                        },
                        error: function (error) {
                            console.log(error);
                        }
                    });
                },
                saveUser: function () {
                    if (this.model.UserId) {
                        this.updateUserApi(this.model.UserId, this.model);
                    } else {
                        this.createUserApi(this.model);
                    }
                    this.model = {};
                },
                refreshUsers: function () {
                    var self = this;
                    self.loading = true;
                    $.ajax({
                        url: '/api/User',
                        method: 'GET',
                        success: function (data) {
                            self.users = data;
                            self.loading = false;
                        },
                        error: function (error) {
                            self.loading = false;
                            console.log(error);
                        },
                        cache: false,
                    });

                }
            }
        });
    </script>
}
